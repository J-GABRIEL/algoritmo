#include "stdafx.h"
#include "conio.h"
#include <stdio.h>
#include <string>
#include <iostream>
#include <stdlib.h>
#define USSER "mio"
#define PASS "hola"
using namespace std;

struct instrumento{
	string nombre;
	int codigo;
	string descripcion;
	string marca;
	int cantidad;
	string lugar;
	char estado;
};

struct instrumento registro;

long int dir_fisica;

struct partituras{
   int codigo;
   string nom;
   string autor;
   char estado;
};
struct partituras dat;
long int fisica;

FILE*ptr;
void LOGIN();
void instrumento();
void ALTA_DIRECTA();
void CONSULTA_DIRECTA();
void MODIFICACION_DIRECTA();
void BAJA_LOGICA_DIRECTA(); 
void LISTADO_SECUENCIAL(); 
void PALTA_DIRECTA(); 
void PCONSULTA_DIRECTA();
void PMODIFICACION_DIRECTA();
void PBAJA_LOGICA_DIRECTA(); 
void PLISTADO_SECUENCIAL(); 
void menuprincipal();
void menupartiduras();


void main()
{

system("color 69");
	string usuario;
	string password;
	int contador = 0;
	bool ingresa = false;

	do{
		system("cls");
		cout<<"LOGIN DE USUARIO:"<<endl;
		cout<<"A CONTINUACION DEBERA INGRESAR EL USUARIO Y PASSWORD:"<<endl;
		cout<<"--------------------------------"<<endl;
		cout<<"--------------------------------"<<endl;
		cout<<"INGRESE EL USUARIO:";
		getline(cin, usuario);
		cout<<"INGRESE EL PASSWORD:";
		getline(cin,password);

		if((usuario==USSER )&& (password==PASS)){

			ingresa= true;
		}else{
			cout<<" EL USUARIO Y PASSWORD SON INVALIDOS:"<<endl;
			cin.get();
			contador++;

		}
	}while(ingresa== false && contador < 3 );

	if(ingresa==false)
	{
		cout<<"usted no pudo ingresar al sistema:"<<endl;
	}else{
	
		cout<<"bienvenido al sistema"<<endl<<usuario<<endl<<"usted ingresara al menu principal:"<<endl;
		menuprincipal();
	}
	
	getch();
}

void menuprincipal()
{
	system("cls");
	system("color 0B");
	int opcion;
	do{
	cout<<"\t\t ****MENU*****"<<endl;
	cout<<"******************************************"<<endl;
	cout<<"\t 1.INSTRUMENTO"<<endl;
	cout<<"\t 2.PARTITURAS"<<endl;
	cout<<"\t 3.VOLVER ATRAS"<<endl;
	cout<<"\t 0.salir del programa"<<endl;
	cout<<"\t opcion:";
	cin>>opcion;
	system("cls");
	switch(opcion)
	{
	case 1:
		instrumento();
		break;
	case 2:
		menupartiduras();
		break;
	case 3:
		//menu usuario();
		break;
	case 0:
		cout<<"\t\n saliendo del programa";
		break;
	default:
		cout<<"\t opcion invalida";
		break;
	}
	}while(opcion!=0);
	system("cls");
   getch();
}


void instrumento()
{
	system("cls");
	system("color 7D");
	int opcion;
	do{
	cout<<"\t\t INVENTARIO DE INSTRUMENTOS DE ORQUESTA"<<endl;
	cout<<"\t 1.CREAR ARCHIVO"<<endl;
	cout<<"\t 2.ALTAS DIRECTAS"<<endl;
	cout<<"\t 3.CONSULTAS DIRECTAS"<<endl;
	cout<<"\t 4.MODIFICACION DIRECTA"<<endl;
	cout<<"\t 5.BAJAS LOGICAS DIRECTAS"<<endl;
	cout<<"\t 6.LISTADO SECUENCIAL"<<endl;
	cout<<"\t 0.Salir"<<endl;
	cout<<"\t opcion: ";
	cin>>opcion;
	system("cls");
	switch(opcion)
	{
	case 1:
		ptr=fopen("inventario.dat","wb");
		cout<<"\nEl archivo fue creado \n\n";
		system("pause");
		system("cls");
		break;
	case 2:
		ALTA_DIRECTA();
		break;
	case 3:
		CONSULTA_DIRECTA();
		break;
	case 4:
		MODIFICACION_DIRECTA();
		break;
	case 5:
		BAJA_LOGICA_DIRECTA();
		break;
	case 6:
        LISTADO_SECUENCIAL();
		break;
	case 0:
		cout<<"\t saliendo del programa";
		break;
	default:
		cout<<"\t opcion invalida";
		break;
	}
	}while(opcion!=0);
	system("cls");
	getch();
}

void ALTA_DIRECTA()
{
  int codigo;
  ptr=fopen("inventario.dat","ab+");
 cout<<"ingrese codigo:";
 cin>>codigo;
 dir_fisica=codigo*sizeof(registro);
 fseek(ptr,dir_fisica,SEEK_SET); 
 fread(&registro,sizeof(registro),1,ptr);
  if(registro.codigo==codigo)
  {
       cout << "\n\n\n\rRegistro duplicado !!!";
       fclose(ptr);
       getch();
  }
 cout<<endl<< "introducir Nombre:";
do{
	getline(cin, registro.nombre);
  }while(registro.nombre.length() == 0);
	cout<< "descripcion:";	
	do{
	getline(cin, registro.descripcion);
	}while(registro.descripcion.length() == 0);
	cout<<"marca:";
	do{
		getline(cin,registro.marca);
   }while(registro.marca.length() == 0);
	cout<<"cantidad:";
	cin>>registro.cantidad;
	cout<<"lugar:";
	do{
		getline(cin, registro.lugar);
	}while(registro.lugar.length() == 0);
	registro.codigo=codigo;
	registro.estado=='A';
    fwrite(&registro,sizeof(registro),1,ptr); // Grabar el Registro completo
    fclose(ptr); // Cierra el archivo
	cout << "\n\r<<< Oprima cualquier tecla para continuar >>>"<<endl;
	system("cls");
}

void CONSULTA_DIRECTA()
{
  int codigo;  
  cout << "\n\rCONSULTA DE REGISTROS DE PRODUCTOS";
   ptr=fopen("inventario.dat","rb"); // Intenta abrir el archivo PRODUCTO.DIR
				     // en modo de solo lectura
  if(ptr==NULL)
  {
    cout << "\n\n\n\rNo existe el archivo !!!";
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
    }
  else{
	   cout << "\n\n\n\rINTRODUZCA EL CODIGO DEL INSTRUMENTO: ";
  cin >> codigo;
	  dir_fisica=codigo*sizeof(registro); // Calculo de la dir. fisica
    fseek(ptr,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
    fread(&registro,sizeof(registro),1,ptr);
    if(registro.codigo==codigo)
  {
	   cout << "\n\rNOMBRE            CODIGO        DESCRIPCION         MARCA        CANTIDAD              LUGAR           ";
  cout << "\n\r-------------------------------------------------------------------------------------------------------------------------------";
  cout<<endl<<"      "<<registro.nombre<<"      "<<registro.codigo<<"      "<<registro.descripcion<<"      "<<registro.marca<<"      "<<registro.cantidad<<"      "<<registro.lugar;
    
  }
  else
  {
    cout << "\n\n\n\rNo existe ese registro !!!";
  }
  cout << "\n\n\n\n\r<<< Oprima cualquier tecla para continuar >>>";
 getch();
 }fclose(ptr);
  system("cls");
}
void LISTADO_SECUENCIAL()
{
  cout << "\n\rLISTADO DE REGISTROS DE PRODUCTOS";
  ptr=fopen("inventario.dat","rb"); // Intenta abrir el archivo PRODUCTO.DIR
				     // en modo de solo lectura
  if(ptr==NULL)
  {
    cout << "\n\n\n\rNo existe el archivo !!!";
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
  }
  else
  {
   cout<<"\n\rNOMBRE     CODIGO      DESCRIPCION      MARCA        CANTIDAD       LUGAR        ";
  cout<<"\n\r----------------------------------------------------------------------------------------";
  while((fread(&registro,sizeof(registro),1,ptr))==1)
  {
    if(registro.estado=='A'){
		cout<<endl<<"   "<<registro.nombre<<"   "<<registro.codigo<<"    "<<registro.descripcion<<"    "<<registro.marca<<"    "<<registro.cantidad<<"    "<<registro.lugar;
	}
	else
	{
	cout<<"eliminado";
	}
	};
  cout << "\n\r----------------------------------------------------------------------------------------";
  cout << "\n\rFin del listado !!!";
  cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
  fclose(ptr);
  getch();
}
  system("cls");
}

void MODIFICACION_DIRECTA()
{
  int codigo;
  cout << "\n\rMODIFICACION DE REGISTROS DE PRODUCTOS";
  ptr=fopen("inventario.dat","rb+"); // Intenta abrir el archivo PRODUCTO.DIR
			     // en modo de lectura/escritura
  if(ptr==NULL)  // Valida la existencia del archivo
  {
    cout << "\n\n\n\rNo existe el archivo !!!";
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
    getch();
  }
  else{
  cout << "\n\n\n\ringrese el codigo: ";
  cin >> codigo;

  dir_fisica=codigo*sizeof(registro); // Calculo de la dir. fisica
  fseek(ptr,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
  fread(&registro,sizeof(registro),1,ptr);
    if((registro.codigo==codigo)&&(registro.estado=='A'))
  {
      cout << "\n\rNOMBRE            CODIGO        DESCRIPCION         MARCA        CANTIDAD              LUGAR           ESTADO";
      cout << "\n\r-------------------------------------------------------------------------------------------------------------------------------";
      cout<<endl<<"      "<<registro.nombre<<"      "<<registro.codigo<<"      "<<registro.descripcion<<"      "<<registro.marca<<"      "<<registro.cantidad<<"      "<<registro.lugar<<"      "<<registro.estado;
	  
	  cout << "\n\n\n\rModifique los nuevos datos ...";
      cout<<endl<< "introducir Nombre:";
do{
	getline(cin, registro.nombre);
  }while(registro.nombre.length() == 0);
	cout<< "descripcion:";	
	do{
	getline(cin, registro.descripcion);
	}while(registro.descripcion.length() == 0);
	cout<<"marca:";
	do{
		getline(cin,registro.marca);
   }while(registro.marca.length() == 0);
	cout<<"cantidad:";
	cin>>registro.cantidad;
	cout<<"lugar:";
	do{
		getline(cin, registro.lugar);
	}while(registro.lugar.length() == 0);
       fseek(ptr,dir_fisica,SEEK_SET);
      fwrite(&registro,sizeof(registro),1,ptr);  // Graba el registro con
						   // los nuevos campos
      fclose(ptr);   // Cierra el archivo
      cout << "\n\n\n\rRegistro modificado !!!";
      cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
      getch();
  }
  else
  {
   cout << "\n\n\n\rNo se encuentra ese registro !!!";
  }
  fclose(ptr); // Cierra el archivo
  cout << "\n\n\n\n\r<<< Oprima cualquier tecla para continuar >>>";
  system("cls");
  getch();
  }
}

void BAJA_LOGICA_DIRECTA(void)
{
  int codigo; // Variable local para el numero de producto que desea eliminar
  char op;
  cout << "\n\rBAJA LOGICA DE REGISTROS DE PRODUCTOS";
  ptr=fopen("inventario.dat","r+b"); // Intenta abrir el archivo PRODUCTO.DIR
				     // en modo de lectura/escritura
  if(ptr==NULL)  // Valida la existencia del archivo
  {
    cout << "\n\n\n\rNo existe el archivo !!!";
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
    getch();
    return;
  }
  else{
  cout << "\n\n\n\ringrese el codigo: "; 
  cin >> codigo;
  dir_fisica=codigo*sizeof(registro); // Calculo de la dir. fisica
  fseek(ptr,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
  fread(&registro,sizeof(registro),1,ptr);
     // Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
  if((registro.codigo==codigo)&&(registro.estado=='A'))
  {
        cout<<endl<<"   ** LISTADO DE INSTRUMENTOS **";
		cout<<endl<<" N   Nombre      codigo      descripcion      marca    cantidad     lugar";
		cout<<endl<<"---------------------------------------------------------------------------";
		cout<<endl<<"      "<<registro.nombre<<"      "<<registro.codigo<<"      "<<registro.descripcion<<"      "<<registro.marca<<"      "<<registro.cantidad<<"      "<<registro.lugar<<"      "<<registro.estado;
		cout<<"desea eliminar a "<<registro.nombre<<"? (y)es:";
		cin>>op;
		if(op=='y'){
		registro.estado='E';
		fseek(ptr,(long)(codigo-1)*sizeof(registro),0);
		fwrite(&registro,sizeof(registro),1,ptr);
		cout<<"     "<<registro.nombre<<" a sido eliminada"<<endl;
		getch();
		}
		else
		{
			cout<<"regsitro no eliminado"<<endl;
		}
  }
		fclose(ptr);
            }
}	 
	
void datospartidura() 
{	
	int codigo;
	cout<<endl<< "Nombre:";
	do{
		getline(cin,dat.nom);
	}while(dat.nom.length() == 0);
	cout<< "codigo:";
	cin>> codigo;
	 if(dat.codigo==codigo)
  {
       cout << "\n\n\n\rRegistro duplicado !!!";
       fclose(ptr);
       getch();
  }
	cout<<"autor:";	
	do{
		getline(cin, dat.autor);
	}while(dat.autor.length() == 0);
	dat.codigo=codigo;
     system("cls");
}
void Registro()
{
	cout<<endl<<"\t"<<dat.nom<<"\t      "<<dat.codigo<<"\t       "<<dat.autor<<endl;
}
void adicionarpartiduras()
{
	FILE *ptr;
	datospartidura();
	dat.estado=='A';
	ptr= fopen("partitura.dat","b+r");
	fwrite(&dat, sizeof(dat),1,ptr);
	fclose(ptr);
}
void listar()
{
	ptr= fopen("partitura.dat","rb");
	if(ptr == NULL)
	{
		cout<< "EL archivo no existe...";
	}
	else
	{
		cout<<endl<<"   ** LISTADO DE PARTITURAS **";
		cout<<endl<<"    Nombre      codigo         autor";
		cout<<endl<<"-----------------------------------------";
		while((fread(&dat,sizeof(dat),1,ptr))==1)
		{
			if(dat.estado=='A')
			{
				Registro();
			}
			fread(&dat, sizeof(dat),1,ptr);

		}
		fclose(ptr);
	}
}
void buscarpartitura()
{
	int codigo;
	ptr=fopen("partitura.dat","rb");
	if(ptr== NULL)
	{
		cout<< "El archivo no existe...";
	}
	else
	{
		cout << "\n\n\n\rINTRODUZCA EL CODIGO DE LA PARTITURA ";
         cin>>codigo;

		fisica=codigo*sizeof(dat);
		fseek(ptr,fisica,SEEK_SET);
		fread(&dat,sizeof(dat),1,ptr);
		if((dat.estado=='A')&&(dat.codigo==codigo)){
		cout<<endl<<"   ** LISTADO DE PARTITURAS **";
		cout<<endl<<"    Nombre      codigo         autor";
		cout<<endl<<"-----------------------------------------";
		Registro();}
			else
				cout<<endl<< "Registro eliminado...";
				fclose(ptr);
		  
		    }fclose(ptr);
}
void modificarpartitura()
{
	int codigo;
	char resp;
	ptr=fopen("partitura.dat","r+b");
	if(ptr== NULL)
	{
		cout<< "El archivo no existe...";
	}
	else
	{
		cout << "\n\n\n\rINTRODUZCA EL CODIGO DE LA PARTITURA ";
         cin >> codigo;
		 fisica=codigo*sizeof(dat);
		fseek(ptr,fisica,SEEK_SET);
		fread(&dat,sizeof(dat),1,ptr);
		{
			if((dat.estado=='A')&&(dat.codigo==codigo))
			{
		cout<<endl<<"   ** LISTADO DE PARTITURAS **";
		cout<<endl<<"N      Nombre      codigo         autor";
		cout<<endl<<"-----------------------------------------";
		Registro();
		cout<<"desea modificar? (y)es:";
		cin>>resp;
		if(resp=='y')
		{
		cout<<endl<< "Nombre:";
	do{
		getline(cin,dat.nom);
	}while(dat.nom.length() == 0);
	cout<<"autor:";	
	do{
		getline(cin, dat.autor);
	}while(dat.autor.length() == 0);
	dat.codigo=codigo;
		 fisica=codigo*sizeof(dat);
		fseek(ptr,fisica,SEEK_SET);
		fwrite(&dat,sizeof(dat),1,ptr);
		}
		else
		{
			cout<<"regsitro no modificado"<<endl;
		}
		}
		
	}
	}fclose(ptr);
}
void eliminarpartitura()
{
	int codigo;
	char resp;
	ptr=fopen("partitura.dat","r+b");
	if(ptr== NULL)
	{
		cout<< "El archivo no existe...";
	}
	else
	{
		 fisica=codigo*sizeof(dat);
		fseek(ptr,fisica,SEEK_SET);
		fread(&dat,sizeof(dat),1,ptr);
	if((dat.estado=='A')&&(dat.codigo==codigo))
			{
		cout<<endl<<"   ** LISTADO DE PARTITURAS **";
		cout<<endl<<"N      Nombre      codigo         autor";
		cout<<endl<<"-----------------------------------------";
		Registro();
		cout<<"desea eliminar a "<<dat.nom<<"? (y)es:";
		cin>>resp;
		if(resp=='y')
		{
		dat.estado='E';
		 fisica=codigo*sizeof(dat);
		fseek(ptr,fisica,SEEK_SET);
		fwrite(&dat,sizeof(dat),1,ptr);
		cout<<""<<dat.nom<<" a sido eliminada"<<endl;
		getch();
		}
		else
		{
			cout<<"regsitro no eliminado"<<endl;
		}
		fclose(ptr);
            }
		 
	}
}

void menupartiduras()
{
	system("cls");
	system("color 3D");
	int opcion;
	
	do{
	cout<<"\t\t PARTIDURAS"<<endl;
	cout<<"\t 1.Crear archivo"<<endl;
	cout<<"\t 2.Adicionar partitura"<<endl;
	cout<<"\t 3.Buscar partitura"<<endl;
	cout<<"\t 4.Mostrar listar de partituras"<<endl;
	cout<<"\t 5.Modificar partitura"<<endl;
	cout<<"\t 6.Eliminar partitura"<<endl;
	cout<<"\t 7.volver a menu"<<endl;
	cout<<"\t 0.Salir"<<endl;
	cout<<"\t opcion:";
	cin>>opcion;
	system("cls");
	switch(opcion)
	{
	case 1:
		ptr=fopen("partitura.dat","wb");
		cout<<"\n --EL ARCHIVO FUE CREADO--"<<endl;
		system("pause");
		system("cls");
		break;
	case 2:
		cout<<"\t INGRESE DATOS ";
		listar();
		adicionarpartiduras();
		break;
	case 3:
		buscarpartitura();
		getch();
		system("cls");
		break;
	case 4:
	    listar();
		getch();
		system("cls");
		break;
	case 5:
		modificarpartitura();
		break;
	case 6:
		
		eliminarpartitura();
		break;
	case 7:
		break;
	case 0:
		cout<<"\t saliendo del programa";
		break;
	default:
		cout<<"\t opcion invalida"<<endl;
		break;
	}
	}while(opcion!=0);
	system("cls");
	getch();

}
